diff --git a/fs/Exfat.cpp b/fs/Exfat.cpp
index 46a0e2d..2dbeaa2 100644
--- a/fs/Exfat.cpp
+++ b/fs/Exfat.cpp
@@ -35,7 +35,9 @@ static const char* kFsckPath = "/system/bin/fsck.exfat";
 
 bool IsSupported() {
     return access(kMkfsPath, X_OK) == 0 && access(kFsckPath, X_OK) == 0 &&
-           IsFilesystemSupported("exfat");
+           (IsFilesystemSupported("exfat") ||
+            IsFilesystemSupported("texfat") ||
+            IsFilesystemSupported("sdfat"));
 }
 
 status_t Check(const std::string& source) {
@@ -61,21 +63,17 @@ status_t Mount(const std::string& source, const std::string& target, int ownerUi
     auto mountData = android::base::StringPrintf("uid=%d,gid=%d,fmask=%o,dmask=%o", ownerUid,
                                                  ownerGid, permMask, permMask);
 
-    const char *fs = "exfat";
-    if (IsFilesystemSupported("sdfat")) {
-        fs = "sdfat";
-    } else if (IsFilesystemSupported("texfat")) {
-        fs = "texfat";
-    }
-
+    const char* fs = "exfat";
+    if (IsFilesystemSupported("sdfat")) fs = "sdfat";
+    if (IsFilesystemSupported("texfat")) fs = "texfat";
     if (mount(source.c_str(), target.c_str(), fs, mountFlags, mountData.c_str()) == 0) {
-        return 0;
+         return 0;
     }
 
     PLOG(ERROR) << "Mount failed; attempting read-only";
     mountFlags |= MS_RDONLY;
     if (mount(source.c_str(), target.c_str(), fs, mountFlags, mountData.c_str()) == 0) {
-        return 0;
+         return 0;
     }
 
     return -1;
